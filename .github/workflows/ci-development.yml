name: Deploy to ECS

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1-node16
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: SSH into instance and update docker-compose file
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.INSTANCE_HOST }}
      #     username: ${{ secrets.INSTANCE_USER }}
      #     key: ${{ secrets.INSTANCE_KEY }}
      #     script_stop: true # stop script if any error occurs 
      #     script_timeout : 60 # timeout after 60 seconds 
      #     script : |
      #       cd /path/to/docker-compose/file # change this to your actual path 
      #       sed -i "s|image:\s.*|image:\s$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|" docker-compose.yml # replace image tag with new one 
      #       docker-compose up -d # restart containers with new image 
